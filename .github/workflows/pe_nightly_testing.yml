name: "PE Nightly Acceptance Testing"

on:
  workflow_dispatch:
  workflow_call:

jobs:
  setup_matrix:
    name: "Setup Test Matrix"
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
      if: ${{ github.repository_owner == 'puppetlabs' }}

    - name: Activate Ruby 2.7
      uses: ruby/setup-ruby@v1
      if: ${{ github.repository_owner == 'puppetlabs' }}
      with:
        ruby-version: "2.7"
        bundler-cache: true

    - name: Print bundle environment
      if: ${{ github.repository_owner == 'puppetlabs' }}
      run: |
        echo ::group::bundler environment
        bundle env
        echo ::endgroup::

    - name: 'Activate twingate to obtain unreleased build'
      uses: twingate/github-action@v1
      with:
        service-key: ${{ secrets.TWINGATE_PUBLIC_REPO_KEY }}

    - name: 'Get latest build name'
      id: latest
      run: |
        echo "::set-output name=ver::$(curl -q https://artifactory.delivery.puppetlabs.net/artifactory/generic_enterprise__local/main/ci-ready/LATEST)"

    - name: Setup Acceptance Test Matrix
      id: get-matrix
      run: |
        if [[ -e spec/fixtures/matrix/nightly.json ]]; then
          out=`cat spec/fixtures/matrix/nightly.json`
          echo "::set-output name=matrix::$out"
        else
          echo "::set-output name=matrix::${}"
        fi
    - run: |
        echo "${{fromJson(steps.get-matrix.outputs.out)}}"

  Acceptance:
    name: "${{matrix.platforms.label}}"
    needs:
      - setup_matrix
    if: ${{ needs.setup_matrix.outputs.matrix != '{}' }}

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup_matrix.outputs.matrix)}}

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - name: Activate Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "2.7"
        bundler-cache: true
    - name: Print bundle environment
      run: |
        echo ::group::bundler environment
        bundle env
        echo ::endgroup::

    - name: Provision test environment
      run: |
        bundle exec rake 'litmus:provision[${{matrix.platforms.provider}},${{ matrix.platforms.image }}]'
        echo ::group::=== REQUEST ===
        cat request.json || true
        echo
        echo ::endgroup::
        echo ::group::=== INVENTORY ===
        if [ -f 'spec/fixtures/litmus_inventory.yaml' ];
        then
          FILE='spec/fixtures/litmus_inventory.yaml'
        elif [ -f 'inventory.yaml' ];
        then
          FILE='inventory.yaml'
        fi
        sed -e 's/password: .*/password: "[redacted]"/' < $FILE || true
        echo ::endgroup::
        echo INVENTORY_PATH=$FILE >> $GITHUB_ENV

    - name: 'Activate twingate'
      uses: twingate/github-action@v1
      with:
        service-key: ${{ secrets.TWINGATE_PUBLIC_REPO_KEY }}

    - name: Install PE
      run: |
        bundle exec bolt --tmpdir /tmp --log-level debug  --modulepath spec/fixtures/modules  -i ./$INVENTORY_PATH plan run deploy_pe::provision_master --params '{"download_url":"https://artifactory.delivery.puppetlabs.net/artifactory/generic_enterprise__local/main/ci-ready/puppet-enterprise-${{ steps.latest.outputs.ver }}-${{matrix.platforms.osfamily}}.tar","pe_settings":{"password":"puppetlabs", "configure_tuning": false}}'  --targets all --stream

    - name: Install module
      run: |
        bundle exec rake 'litmus:install_module'
    - name: Run acceptance tests
      run: |
        bundle exec rake 'litmus:acceptance:parallel'
    - name: Remove test environment
      if: ${{ always() }}
      continue-on-error: true
      run: |
        if [[ -f inventory.yaml || -f spec/fixtures/litmus_inventory.yaml ]]; then
          bundle exec rake 'litmus:tear_down'
          echo ::group::=== REQUEST ===
          cat request.json || true
          echo
          echo ::endgroup::
        fi
